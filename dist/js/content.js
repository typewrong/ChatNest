const i=()=>Date.now().toString(36)+Math.random().toString(36).substring(2),c=()=>{const e=window.location.href,r=window.location.hostname;if(r.includes("deepseek.com")){const t=e.match(/\/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:[/?#]|$)/i);if(t)return"deepseek_"+t[1];const o=e.match(/chat\/s\/([^/?#]+)/i);if(o)return"deepseek_"+o[1]}if(r.includes("doubao.com")){const t=e.match(/chat\/(\d+)(?:[/?#]|$)/i);if(t)return"doubao_"+t[1];const o=e.match(/\/([^/?#]+)(?:[/?#]|$)/);if(o)return"doubao_"+o[1]}return"chat_"+btoa(e).replace(/[+/=]/g,"").substring(0,16)},a=()=>{const e=window.location.hostname;return e.includes("deepseek.com")?"deepseek":e.includes("doubao.com")?"doubao":"unknown"},n=()=>{try{return!chrome||!chrome.runtime?!1:!!chrome.runtime.id}catch(e){return console.error("扩展上下文检查错误:",e.message),!1}},l=(e,r)=>{try{if(!n()){console.error("扩展上下文已失效，无法发送消息"),r&&r({success:!1,error:"Extension context invalidated"});return}chrome.runtime.sendMessage(e,t=>{if(chrome.runtime.lastError){console.error("消息发送错误:",chrome.runtime.lastError.message),r&&r({success:!1,error:chrome.runtime.lastError.message});return}r&&r(t)})}catch(t){console.error("发送消息时出错:",t.message),r&&r({success:!1,error:t.message})}},m=e=>new Promise((r,t)=>{try{if(console.log("尝试保存对话到后台:",e.id),!n()){console.error("Chrome runtime API不可用，可能是扩展上下文已失效");try{const o=`chatnest_temp_${e.id}`;chrome.storage.local.set({[o]:e},()=>{if(chrome.runtime.lastError){console.error("使用chrome.storage.local保存失败:",chrome.runtime.lastError),t(new Error("扩展上下文已失效且备用存储也失败"));return}console.log("已将对话临时保存到chrome.storage.local:",o),r({success:!0,message:"已临时保存"})})}catch(o){console.error("备用存储也失败:",o),t(new Error("扩展上下文已失效且备用存储也失败"))}return}l({type:"SAVE_CONVERSATION",data:e},o=>{if(!o){console.error("保存失败: 未收到响应"),t(new Error("保存失败: 未收到响应"));return}if(o.success===!0)console.log("对话保存成功:",e.id),r(o);else if(o.received===!0)console.log("保存请求已接收，等待完成..."),setTimeout(()=>{r({success:!0,message:"请求已接收"})},500);else{const s=o.error||"未知错误";console.error("保存失败:",s),t(new Error(s))}})}catch(o){const s=o instanceof Error?o.message:String(o);console.error("saveConversation执行时出错:",s),t(new Error(s))}}),d=async()=>{try{return!chrome||!chrome.storage||!chrome.storage.sync?(console.log("存储API不可用，使用默认设置（开启）"),!0):new Promise(e=>{chrome.storage.sync.get("autoExtractEnabled",r=>{const t=r.autoExtractEnabled!==void 0?r.autoExtractEnabled:!0;console.log("自动提取对话功能状态:",t?"开启":"关闭"),e(t)})})}catch(e){return console.error("获取自动提取设置时出错:",e),!0}},u=async e=>{try{return!chrome||!chrome.storage||!chrome.storage.sync?(console.error("存储API不可用，无法保存设置"),!1):new Promise(r=>{chrome.storage.sync.set({autoExtractEnabled:e},()=>{console.log("自动提取对话功能已"+(e?"开启":"关闭")),r(!0)})})}catch(r){return console.error("保存自动提取设置时出错:",r),!1}};window.ChatNest={generateUniqueId:i,getConversationIdFromUrl:c,determinePlatform:a,saveConversation:m,isExtensionValid:n,getAutoExtractEnabled:d,setAutoExtractEnabled:u,debugMode:!0};console.log("ChatNest内容脚本已加载");console.log("当前平台:",a());console.log("对话ID:",c());chrome.runtime.onMessage.addListener((e,r,t)=>{if(e.type==="UPDATE_AUTO_EXTRACT")return console.log(`收到自动提取设置更新: ${e.enabled?"开启":"关闭"}`),u(e.enabled).then(()=>{t({success:!0})}).catch(o=>{console.error("更新自动提取设置失败:",o),t({success:!1,error:o.message})}),!0});
